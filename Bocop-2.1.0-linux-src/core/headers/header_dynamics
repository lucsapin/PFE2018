// This code is published under the Eclipse Public License
// Header included at the beginning of the function defined in the problem folder
// Daphne Giorgi, Pierre Martinon
// Inria Saclay and Cmap Ecole Polytechnique
// 2012-2017

#ifndef DYNAMICS_H
#define DYNAMICS_H

#include <iostream>
#include <cmath>
#include "dependencies.hpp"
using namespace std;

// Function for the dynamics of the problem
// dy/dt = dynamics(y,u,z,p)

// The following are the input and output available variables of your
// optimal control problem.
// The equations of your problem have to be written in C++ code
// Remember that the vectors numbering starts from 0
// (ex: the first component of the vector state is state[0])

// Input :
// time : current time (t)
// normalized_time: t renormalized in [0,1]
// initial_time : time value on the first discretization point
// final_time : time value on the last discretization point
// dim_* is the dimension of next vector in the declaration
// state : vector of state variables
// control : vector of control variables
// algebraicvars : vector of algebraic variables
// optimvars : vector of optimization parameters
// constants : vector of constants

// Output :
// state_dynamics : vector giving the expression of the dynamic of each state variable

template<class Tdouble> 
void dynamics(const Tdouble time,
              const double normalized_time,
              const Tdouble initial_time,
              const Tdouble final_time,
              const double fixed_initial_time,
              const double fixed_final_time,
              const int dim_state,
              const Tdouble* state,
              const int dim_control,
              const Tdouble* control,
              const int dim_algebraicvars,
              const Tdouble* algebraicvars,
              const int dim_optimvars,
              const Tdouble* optimvars,
              const int dim_constants,
              const double* constants,
              const int current_step,
              const vector<double> &past_steps,
              const vector<vector<Tdouble> > &past_states,
              const int current_stage,
              const vector<double> &past_stages,
              const vector<vector<Tdouble> > &past_controls,
              Tdouble* state_dynamics)

#endif

