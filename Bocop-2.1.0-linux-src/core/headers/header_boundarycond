// This code is published under the Eclipse Public License
// Header included at the beginning of the function defined in the problem folder
// Daphne Giorgi, Pierre Martinon
// Inria Saclay and Cmap Ecole Polytechnique
// 2012-2017

#ifndef BOUNDARYCOND_H
#define BOUNDARYCOND_H

#include <iostream>
#include <math.h>
#include "dependencies.hpp"
using namespace std;

// Function for the initial and final conditions of the problem
// lb <= Phi(t0, y(t0), tf, y(tf), p) <= ub

// The following are the input and output available variables of your
// optimal control problem.
// The equations of your problem have to be written in C++ code
// Remember that the vectors numbering starts from 0
// (ex: the first component of the vector state is state[0])

// Input :
// initial_time : value of the initial time
// final_time : value of the final time
// dim_state : number of state variables
// initial_state : initial state vector
// final_state : final state vector
// dim_optimvars : number of optimization parameters
// optimvars : vector of optimization variables
// dim_constants : number of constants
// constants : vector of constants
// dim_boundary_conditions : number of boundary conditions

// Output :
// boundaryconditions : vector of boundary conditions ("Phi" in the example above).

template<class Tdouble> 
void boundarycond(const Tdouble initial_time,
                  const Tdouble final_time,
                  const double fixed_initial_time,
                  const double fixed_final_time,
                  const int dim_state,
                  const Tdouble* initial_state,
                  const Tdouble* final_state,
                  const int dim_optimvars,
                  const Tdouble* optimvars,
                  const int dim_constants,
                  const double* constants,
                  const int dim_boundary_conditions,
                  Tdouble* boundary_conditions)
                                          
#endif

