BOCOP CHANGELOG

2017/10/17: bocop-2.1.0

  - dynamics function now has access to past state and control variables, 
  in order to solve delay problems; pathcond has access to past states.
  Restricted to fixed final time case. New examples: harvest, leukemia.
  - problem dimensions are now passed to preProcessing function. 
  - functions for Heaviside and 2Dinterpolation added to publicTools 
  - [gui] visualization now show bounds for state variables (optional). 
  - [gui] bugfix for GUI unable to locate obervations files in parameter 
  identification problems. See jackson example. 
  - [gui] bugfix for GUI sometimes resetting problem discretization to
  default (Midpoint with 100 time steps).
  - [core] ADOL-C options for sparse hessian computation have been adjusted
  and should give better performance in most cases.
  - [core] time discretizations are now hardcoded (BocopDefinition.cpp)
  instead of reading .disc files at runtime. Bocop executables therefore
  do not need access to Bocop root package anymore at runtime.
  Available methods: Euler (explicit), Euler (implicit), Midpoint (imp.),
  Gauss II and Lobatto IIIC.
  - [core] L2 norm of constraint violation is now correctly saved in .sol file.
  - [core] some .tpp files were merged with their repective .hpp files. 
  - [core] a few minor memory leaks were fixed.
  - [thirdparty, linux, mac] update to latest ADOL-C 2.6.3 and COLPACK. 
  Should give reduced memory usage as well as faster computation of derivatives.
  - [thirdparty] build process should be faster, quieter and more foolproof.
  - [thirdparty] Experimental: support for CppAD instead of AdolC/Colpack to 
  compute derivatives. Enabled with CMake option USE_CPPAD.
  - [scripts] benchmark scripts were updated.
  - [windows] Updated Cmake and MinGW to latest versions (now c++11 compliant). 

2017/02/06: bocop-2.0.5
  
  - package: improved windows installer will automatically offer to install Cmake and MinGW.
  It should also not require PATH edits or reboots anymore (the latter may depend on windows 
  version).
  - package: link to GUI added to desktop.
  - package: root directory for Bocop package should now be properly set up after install.
  - IO: float precision for .sol file set to 15 instead of 20 to avoid spurious digits.
  - GUI: added red lines for bounds for state, control and algebraic variables in visualization tab.
  - GUI: 'Clean problem' in Build&Run menu now checks for file existence, thus preventing 
  warnings for trying to remove missing files.
  - GUI: 'Save .sol as' in visualization tab should now overwrite properly if confirmed.
  - GUI: reverted bounds format (in .bounds file) for state variables from block (experimental) 
  to normal. 
  - GUI: fixed some mis-positionning between bounds and labels in .bounds file (this bug was 
  cosmetic only and had no impact).
  - GUI: in starting point tab, Ymin and Ymax should now be updated according to the figure 
  (linear or spline interpolations). 
  - GUI: constants are now numbered from 0 to n-1 for consistency with c++ code.
  - GUI: tab 'Discretization' was merged into 'Definition' (method and time steps).
  - GUI: prompt for clean and rebuild if Cmake fails to build the executable.
  - GUI: prompt for build if executable not present when launching the optimization.
  - GUI: splitted some functions for better code clarity
  - GUI: fixed bug in export function for algebraic variables (time stages).
  - example/contrast added: contrast optimization in magnetic resonance imaging.
  - example/swimmer added: optimal swimming for 3-link Purcell type micro-swimmer.
  - example/jackson: reorganization of the different versions of the parameter identification.
  - example/methane: renamed to bioreactor; fixed improper use of Tdouble variables 
  (initial_time, final_time) in call to function parametrizedcontrol (pathcond.tpp).
  - example/stateconstraint3: removed some bounds that could make the problem unfeasible.
  - core: option for iteration output was disabled for now for debugging.
	  

2015/11/13: bocop-2.0.4
  - GUI: removed the ability to edit the C++ function of the problem in Definition tab. 
  The .tpp files can be handled by any text editor (GUIcreator, gedit, notepad++, ...) 
  This feature had caused some pretty annoying bugs (e.g. recently mixing files 
  criterion.tpp and dynamics.tpp) and was getting increasingly complicated to maintain 
  properly. Be careful not to edit .def / .bounds / .constants files simultaneously from 
  the GUI and an external editor. This will likely mess up with your problem definition.
  - GUI: fixed the broken button to stop an ongoing optimization. 
  - GUI: fixed some extra newlines when displaying output from compilation and optimization.
  - GUI: problem is no longer cleaned systematically when building, to speedup the build process.
  - GUI: added a Clean menu entry that deletes the bocop executable and build/ subfolder.
  - GUI: version number is now checked by reading the file VERSION. 
  Running mismatched versions is not recommended.
  - GUI: removed 'Save Problem as' tab in File menu (use manual copy instead).
  - GUI/core: default starting point values set to 0.1 instead of 0 to reduce the risk of 
  math errors (log, division by zero, etc).
  - core: CMakeLists edited so that default build now uses the same flags as Debug build
  - matlab: added a new launcher function that allows to call bocop from matlab. 
  The launcher can pass several input parameters and automatically parses the solution.
  - matlab: window for visualization tree was shifted to avoid overlap with main window.
  

2015/09/25: bocop-2.0.3
  - GUI: add new option iteration output frequency to save the iterations from Ipopt
  - GUI: the run option rebuilds the executable if the source files have been modified 
  or if there is no executable in the problem directory
  - GUI: remove jpeg format for export
  - GUI: add explicit error message when cmake is not installed
  - GUI: add new option to compile in debug mode (default compilation is release mode)
  - core: one build directory per problem instead of one global build directory
  - core: slight modification in problem.bounds syntax to prepare block definition
  - core bugfix: correct values of control initialization saved in sol file
  - bugfix: change Ipopt configure to fix an error that happened on some Linux 
  (the error was "don't have function for random number generator")
  - Third parties: update to latest working versions
  - Third parties: we distribute a pre-built version of Ipopt for Windows because of 
  some error that occur when a recent version of Matlab is installed

2015/03/25: bocop-2.0.2
  - GUI: initialization can import data from an external file in Starting Point tab 
  (any previous .init file is saved as .init.backup)
  - automatic backup of .sol and .def files (as .backup)
  - core: add pre-defined functions in publicTools which can be called directly 
  in user files (such as reading a data file or interpolations over time).
    Description of these functions added in User Guide (appendix) and doxygen.
  - core: add header_* for pre/postProcessing.cpp and measures.tpp
  - GUI: better description for cold/warm start options of optimization restart
  - GUI: more detailled messages at the end of the optimization
  - GUI: button "Save .sol as" in Visualization tab to rename .sol file directly
  - GUI: option "Save problem as" in File menu to copy current problem folder
  - add pre/post-processing files in default example
  - Doxygen: minor changes in BocopDefinition and BocopProblem

2014/09/16: bocop-2.0.1
  - core bugfix: batch folder created when calling a batch optimization
    from command line
  - core bugfix: parameter identification allows the final time to be equal
    to the final time of observation files
  - float precision set to 20 in the solution file
  - GUI bugfix: batch conversion between number of optimizations and batch step
  - GUI : keep memory of the batch informations after doing a single optimization

2014/07/20: bocop-2.0.0
  - cmake: reintroduce cmake flag for unused variables
  - GUI bugfix: choose trunk when README doesn't exist or is broken
  - package: tar.gz files for linux package instead of sh
  - Third parties: update to latest working versions and build via cmake

2014/05/05: bocop-1.1.6
  - GUI: added a clean step before each build for more robustness
  - core bugfix: bad reading of observation files on some systems
    (ex: Mac, Ubuntu 12.04) corrected
  - cmake: set the compilers to cc and c++ for Mac
  - GUI bugfix: visualization and export adapted also to the parameter
    identification case

2014/04/08: bocop-1.1.5
  - extended parameter identification: 'manual' mode, handling of several
    observation files
  - optional pre and post-processing functions specific to each problem
  - batch mode is now available also on the discretization steps
  - GUI: batch mode now allows to set number of optimizations or value step
  - GUI: gui style was changed for compatibility with ubuntu 12.04
  - GUI: build folder created if not present; build made in this folder
  - GUI: update to GUI5 for compatibility with Maverick
  - GUI: enabled keyboard navigation on the visualization tree view
  - *.tpp files added to the sources list and header_* removed; this way
    the compiler is able to detect changes in the user's functions
  - change in the templates inclusions in order to detect changes
    in the optional functions (measure.tpp, pre/postprocessing.cpp)
  - default values are now provided for ALL missing values in problem.def
  - experimental: block initialization for bounds available on command line
    (currently not compatible with GUI usage)
  - NSIS installer for Windows package
  - minor corrections in compilation flags and symbolic links
  - added cpu time and iterations in solution file
  - reintroduced an example of parametrized control in methane problem
  - Matlab: update of the visualization script

2013/11/15: bocop-1.1.4
  - building process now uses CMake for better multi-platform support
  - GUI: new help menu with bocop informations
  - GUI: added safety check to detect version number and core location
  - GUI: several fixes to allow partial definition of a problem

2013/07/24: bocop-1.1.3
  - basic functionalities for parameter identification (least square)
  - removed Scilab interface, GUI gui is now the main interface
  - visualization scripts for Scilab and Matlab (experimental)
  - several interface improvements (definition, starting point, visualization)
  - folder "problems" renamed to "examples", some reorganization for bocop
    core files as well
  - makefile is no longer modified when changing problems; this allows
    running several instances of bocop to solve different problems at the
    same time (note that solving two instances of the same problem in parallel
    is still not supported at the moment)
  - added safety check to detect uninitialized values in user functions
  - GUI: export now saves average_control in addition to stage controls
  - GUI: added a clean step before each build for more robustness

2013/03/30: bocop-1.1.2
  - precompiled package with GUI Gui for Mac
  - Scilab gui: variables export, average control displayed by default,
    changed variables names for easier use in custom scripts
  - GUI gui: global multiple graphs for variables, constraints, multipliers

2013/03/14: bocop-1.1.1
  - precompiled package with GUI Gui for windows
  - GUI gui: multiple graphs on double click, spline interpolation display,
    variables export, average control displayed by default
  - "Solved at acceptable level" is now counted as a successful optimization
  - bugfix: a few glitches in GUI gui

2013/02/15: bocop-1.1.0
  - new GUI GUI available for linux precompiled packages.
  - multipliers for the constraints, as well as the adjoint states,
    are now saved in .sol files and available for visualization.
    Reoptimization is now possible as a warm start, reusing the
    multipliers from the previous solution for initialization in
    addition to the primal variables. Reoptimization using only the
    primal variables is now labeled as cold start.
  - indexes for variables, constraints, parameters and constants
    was shifted from the range 1..dim to 0..dim-1 for consistency
    with the C code of the functions. Same for initialization files.
    A shell script is provided to update problems from 1.0.x versions.
  - decreasing bounds are now allowed for batch optimization.
  - default discretization is now Lobatto III-C.
  - default Ipopt tolerance is now 10e-10.
  - bugfix: removed erroneous blank lines in .def and .bounds files.

2012/05/20: bocop-1.0.3
  - Packages with precompiled binaries for thirdparty codes.
  - Parametrized control, trigonometric or piecewise polynomial.
  - Time discretization is no longer uniform, it can be refined
    manually (experimental feature).
  - Batch optimizations for a varying parameter.
  - Separate initialization file for each variable.
  - Inclusion of "disc_problem.hpp" in criterion.tpp is no
    longer necessary. Please edit files created with older versions.
  - Headers for the functions (boundarycond.tpp, criterion.tpp,
    dynamics.tpp,pathcond.tpp) have changed. Please edit files created
    with older versions, using /problems/default files headers as a model.
  - Output of control and algebraic variables is now done at the stages
    times of the discretization method. State variables output still uses
    the usual discretization times.

2012/02/07: bocop-1.0.2
  - Reoptimization from an existing solution
  - Installation procedure available for Linux, Mac OS, and Windows
  - Memory leak corrected in ADOL-C/sparse/sparsedrivers.cpp

2012/01/15: bocop-1.0.1
  - Visualization in GUI made easier to use (tree of variables to plot)

2011/10/11: bocop-1.0.0-beta
  - First version of BOCOP!
